name: CI

on:
  push:
    branches: [ main, dev ]
    paths-ignore:
      - '**.md'
      - 'examples/**'
      - '.gitignore'
  pull_request:
    branches: [ main, dev ]
    paths-ignore:
      - '**.md'
      - 'examples/**'
      - '.gitignore'
  workflow_dispatch:  

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      go: ${{ steps.changes.outputs.go }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          go:
            - '**/*.go'
            - 'go.mod'
            - 'go.sum'
            - 'Makefile'
            - 'Dockerfile'

  test:
    needs: changes
    if: ${{ needs.changes.outputs.go == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
        cache: true

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run tests
      run: make test

    - name: Run coverage
      run: make coverage-detailed

    - name: Upload coverage reports
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.out
        fail_ci_if_error: false

  build:
    needs: changes
    if: ${{ needs.changes.outputs.go == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
        cache: true

    - name: Build
      run: make build

    - name: Test binary
      run: |
        ./bin/elasticdump --help
        ./bin/elasticdump version || ./bin/elasticdump --version || true

  lint:
    needs: changes
    if: ${{ needs.changes.outputs.go == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
        cache: true

    - name: Format check
      run: |
        make format
        if [ -n "$(git status --porcelain)" ]; then
          echo "Code is not formatted. Please run 'make format'"
          git diff
          exit 1
        fi

    # - name: golangci-lint
    #   uses: golangci/golangci-lint-action@v4
    #   with:
    #     version: latest
    #     args: --timeout=5m
